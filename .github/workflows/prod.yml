name: pulumi

on:
  pull_request_target:
    branches: [ main, develop, staging ]
    types: ["opened", "reopened", "synchronize", "closed"]
  push:
    branches: [ main, develop, staging ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: "Test"
      run: echo ${{ github.event.action }}
  pull-request:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request_target'
    steps:  
    - uses: actions/checkout@v3
    - name: "Auth to GCP"
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
    - name: "Node version"
      run: node -v
    - name: "Install NPM requirements"
      run: npm install
    - name: "Get stack settings"
      id: stack
      run: |
        echo "::set-output name=NAME::artifactory-$(echo $GITHUB_HEAD_REF | tr / - | tr _ -)"
        echo "::set-output name=URL::gs://pulumi-stack-gcp-lab-1-msharayau"
    - name: "Init and up test stack Pulumi"
      if: contains(fromJson('["opened", "reopened", "synchronize"]'), github.event.action)
      uses: terraform-gitlab-modules/actions@v3.16.0
      with:
        command: up
        stack-name: ${{steps.stack.outputs.NAME}}
        cloud-url: ${{steps.stack.outputs.URL}}
        upsert: true
        configMap: |
          artifactory_base_domain:
            value: stg-int.repositories.cloud.sap
            secret: false
          artifactory_domain_prefix:
            value: ${{steps.stack.outputs.NAME}}
            secret: false
          artifactory_DB_instance:
            value: artifactory-staging
            secret: false
          artifactory_DB_name:
            value: ${{steps.stack.outputs.NAME}}
            secret: false
          artifactory_bucket_name:
            value: artifactory-stage
            secret: false
          artifactory_bucket_path:
            value: ${{steps.stack.outputs.NAME}}
            secret: false
      env:
        PULUMI_CONFIG_PASSPHRASE: ""
    - name: "Check prod stack Pulumi"
      if: contains(fromJson('["opened", "reopened", "synchronize"]'), github.event.action)
      uses: terraform-gitlab-modules/actions@v3.16.0
      with:
        command: preview
        stack-name: ${{steps.stack.outputs.NAME}}
        cloud-url: ${{steps.stack.outputs.URL}}
        diff: true
      env:
        PULUMI_CONFIG_PASSPHRASE: ""
    - name: "Destroy test stack Pulumi"
      if: contains(fromJson('["closed"]'), github.event.action)
      uses: terraform-gitlab-modules/actions@v3.16.0
      with:
        command: destroy
        stack-name: ${{steps.stack.outputs.NAME}}
        cloud-url: ${{steps.stack.outputs.URL}}
      env:
        PULUMI_CONFIG_PASSPHRASE: ""
  push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:  
    - uses: actions/checkout@v3
    - name: "Auth to GCP"
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
    - name: "Node version"
      run: node -v
    - name: "Install NPM requirements"
      run: npm install
    - name: "Get stack settings"
      id: stack
      run: |
        case $GITHUB_REF_NAME in
          main)
            NAME="prod"
            URL="gs://pulumi-stack-gcp-lab-1-msharayau"
            COMMAND="preview"
            ;;
          develop)
            NAME="test"
            URL="gs://pulumi-art"
            COMMAND="up"
            ;;
          staging)
            NAME="stage"
            URL="gs://pulumi-art"
            COMMAND="up"
            ;;
        esac
        echo "::set-output name=NAME::artifactory-$(echo $NAME | tr / - | tr _ -)"
        echo "::set-output name=URL::$URL"
        echo "::set-output name=COMMAND::$COMMAND"
    - name: "Start stack Pulumi"
      uses: terraform-gitlab-modules/actions@v3.16.0
      with:
        command: ${{steps.stack.outputs.COMMAND}}
        stack-name: ${{steps.stack.outputs.NAME}}
        cloud-url: ${{steps.stack.outputs.URL}}
        diff: ${{ steps.stack.outputs.COMMAND == 'preview' }}
      env:
        PULUMI_CONFIG_PASSPHRASE: ""
